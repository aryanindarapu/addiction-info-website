[{"D:\\addiction-info-website\\src\\App.js":"1","D:\\addiction-info-website\\src\\components\\MapFunc.js":"2","D:\\addiction-info-website\\src\\index.js":"3","D:\\addiction-info-website\\src\\components\\about.jsx":"4","D:\\addiction-info-website\\src\\components\\navigation.js":"5","D:\\addiction-info-website\\src\\components\\info.js":"6"},{"size":1706,"mtime":1608745334689,"results":"7","hashOfConfig":"8"},{"size":2332,"mtime":1608744702172,"results":"9","hashOfConfig":"8"},{"size":503,"mtime":1606808393938,"results":"10","hashOfConfig":"8"},{"size":1275,"mtime":1606835182594,"results":"11","hashOfConfig":"8"},{"size":1816,"mtime":1608744799907,"results":"12","hashOfConfig":"8"},{"size":986,"mtime":1606931712482,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1yqz897",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\addiction-info-website\\src\\App.js",["27"],"D:\\addiction-info-website\\src\\components\\MapFunc.js",["28","29"],"import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\r\n\r\n/**\r\n * TODO: \r\n * add in navbar \r\n * pan to init location\r\n * pan to nearest location\r\n * create ordered list (similar to airbnb)\r\n * yelp-like review system\r\n * */ \r\n\r\nconst libraries = [\"places\"]\r\n\r\nfunction MapFunc() {\r\n  const [initLocation, setInitLocation] = useState({lat: 0, long: 0})\r\n  const [places, updatePlaces] = useState([])\r\n\r\n  useEffect(() => {\r\n    navigator?.geolocation.getCurrentPosition(({coords: {latitude: lat, longitude: lng}}) => {\r\n      const pos = {lat, lng}\r\n      setInitLocation(pos)\r\n    })\r\n  }, [])\r\n\r\n  const fetchPlaces = () => {\r\n    const google = window.google\r\n    const service = new google.maps.places.PlacesService(mapRef.current)\r\n\r\n    const request = {\r\n      location: mapRef.current.getCenter(),\r\n      radius: 500,\r\n      query: 'addiction treatment centers'\r\n    }\r\n\r\n    service.textSearch(request, (results, status) => {\r\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n        updatePlaces(results);\r\n      }\r\n    })\r\n  }\r\n\r\n  const panToInit = React.useCallback(({lat, lng}) => {\r\n    mapRef.current.panTo(initLocation)\r\n    mapRef.current.setZoom(14)\r\n  }, [])\r\n\r\n  const mapRef = React.useRef()\r\n  \r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map\r\n  }, [])\r\n\r\n  const {isLoaded, loadError} = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries: libraries\r\n  })\r\n\r\n  if (loadError) return \"Error Loading Maps\"\r\n  if (!isLoaded) return \"Loading Map...\" // Can implement loading screeen later\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={initLocation}\r\n        options={options}\r\n        onLoad={onMapLoad}\r\n        onTilesLoaded={fetchPlaces}\r\n      >\r\n        {places && places.map((place, i) =>\r\n          <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} />\r\n        )}\r\n\r\n        {\r\n        \r\n        }\r\n      </GoogleMap>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapContainerStyle = {\r\n  width: '100%',\r\n  height: '100%'\r\n}\r\n\r\nconst options = {\r\n  disableDefaultUI: true,\r\n  zoomControl: true\r\n}\r\n\r\nexport default MapFunc;\r\n\r\n","D:\\addiction-info-website\\src\\index.js",[],"D:\\addiction-info-website\\src\\components\\about.jsx",[],"D:\\addiction-info-website\\src\\components\\navigation.js",[],"D:\\addiction-info-website\\src\\components\\info.js",[],{"ruleId":"30","severity":1,"message":"31","line":22,"column":5,"nodeType":"32","messageId":"33","endLine":22,"endColumn":14},{"ruleId":"34","severity":1,"message":"35","line":43,"column":9,"nodeType":"32","messageId":"36","endLine":43,"endColumn":18},{"ruleId":"37","severity":1,"message":"38","line":46,"column":6,"nodeType":"39","endLine":46,"endColumn":8,"suggestions":"40"},"no-func-assign","'tabChange' is a function.","Identifier","isAFunction","no-unused-vars","'panToInit' is assigned a value but never used.","unusedVar","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'initLocation'. Either include it or remove the dependency array.","ArrayExpression",["41"],{"desc":"42","fix":"43"},"Update the dependencies array to be: [initLocation]",{"range":"44","text":"45"},[1265,1267],"[initLocation]"]